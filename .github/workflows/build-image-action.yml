name: Build Golden Image

on:
  workflow_call:
    inputs:
      distro-name:
        required: true
        type: string
        description: The OS distribution to build
      changed-files:
        required: true
        type: string
        description: JSON string containing information about changed files
      runner-version:
        required: true
        type: string
        description: The version of the GitHub Actions Runner to install


env:
  COLUMNS: 160

jobs:
  generate-matrix:
    name: Generate The Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix-include: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Install Python Tools Scripts
        env:
          PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/
          PIP_EXTRA_INDEX_URL: https://pypi.org/simple
        run: |
          python3 -m pip install -r requirements/tools.txt

      - name: Generate Matrix Include List
        id: generate-matrix
        run: |
          MATRIX=$(tools images matrix ${{ inputs.distro-name }})
          echo "$MATRIX"
          echo "matrix=$MATRIX" >> "$GITHUB_OUTPUT"

  build:
    name: Build Image
    runs-on:
      - self-hosted
      - image-builder
    needs:
      - generate-matrix
    timeout-minutes: 120  # 2 Hours
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.generate-matrix.outputs.matrix-include) }}

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup Packer
        uses: hashicorp-contrib/setup-packer@v3
        with:
          packer-version: 1.8.4

      - name: Get AWS Region From Runner
        run: |
          token=$(curl -s -f -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 10")
          region=$(curl -s -f -H "X-aws-ec2-metadata-token: $token" -v http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)
          echo "AWS_REGION=$region"
          echo "AWS_REGION=$region" >> "$GITHUB_ENV"

      - name: Install Python Tools Scripts
        env:
          PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/
          PIP_EXTRA_INDEX_URL: https://pypi.org/simple
        run: |
          python3 -m pip install -r requirements/tools.txt

      - name: Build Image
        run: |
          tools --timestamps images build-ami --region=${{ env.AWS_REGION }} \
            --runner-version=${{ inputs.runner-version }} \
            ${{ inputs.distro-name }} ${{ matrix.version }} ${{ matrix.arch }}

      - name: Get the built image details
        run: |
          if test -f manifest.json; then
            cat manifest.json
            mkdir manifest
            mv manifest.json manifest/${{ inputs.distro-name }}-${{ matrix.version }}-${{ matrix.arch }}.json
          fi

      - name: Upload Build Manifest
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: manifest
          path: manifest
          if-no-files-found: ignore

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-${{ inputs.distro-name }}-${{ matrix.version }}-${{ matrix.arch }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: exitstatus
          path: exitstatus
          if-no-files-found: error
