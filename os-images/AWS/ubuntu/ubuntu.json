{
  "_comment": "Build with `packer build ubuntu.json`",
  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{ user `aws_region` }}",
      "source_ami_filter": {
        "filters": {
          "virtualization-type": "hvm",
          "name": "{{ user `ami_filter` }}",
          "root-device-type": "ebs",
          "state": "available"
        },
        "owners": [
          "{{ user `ami_owner` }}"
        ],
        "most_recent": true
      },
      "subnet_filter": {
        "filters": {
          "tag:Name": "*-public-*"
        },
        "most_free": true,
        "random": false
      },
      "vpc_filter": {
        "filters": {
          "tag:Name": "test"
        }
      },
      "security_group_filter": {
        "filters": {
          "group-name": "kitchen-slave-auto-delete-test"
        }
      },
      "instance_type": "{{ user `instance_type` }}",
      "ssh_interface": "private_ip",
      "ssh_username": "{{ user `ssh_username` }}",
      "ssh_keypair_name": "kitchen",
      "ssh_private_key_file": "~/.ssh/kitchen.pem",
      "ami_name": "{{ user `ami_name_prefix` }}/{{ user `build_type` }}/{{ user `ami_name_suffix` }}/{{ isotime \"2006-01-02-15-04-05\" }}",
      "ami_groups": [
        "all"
      ],
      "ami_description": "{{ user `build_type` | upper }} Image of {{ user `os_name` }} {{ user `os_version` }} {{ user `os_arch` }}",
      "tags": {
        "Name": "{{ user `build_type` | upper }} // {{ user `os_name` }} {{ user `os_version` }} {{ user `os_arch` }}",
        "OS-Name": "{{ user `os_name` }}",
        "OS-Version": "{{ user `os_version` }}",
        "OS-Arch": "{{ user `os_arch` }}",
        "Build-Date": "{{ isotime }}",
        "Build-Type": "{{ user `build_type` | upper }}",
        "created-by": "packer",
        "Owner": "SRE",
        "Provision-State-Name": "{{ user `state_name` }}",
        "Promoted": false
      },
      "run_tags": {
        "Name": "Packer {{ user `build_type` | upper }} {{ user `os_name` }} {{ user `os_version` }} {{ user `os_arch` }} Builder",
        "created-by": "packer",
        "Owner": "SRE"
      },
      "launch_block_device_mappings": [
        {
          "device_name": "/dev/sda1",
          "volume_size": 20,
          "volume_type": "gp2",
          "delete_on_termination": true
        }
      ]
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "echo -n ''|tee /etc/apt/apt.conf.d/20auto-upgrades",
        "sleep 30",
        "while fuser /var/lib/dpkg/lock >/dev/null 2>&1 ; do",
        "    echo Waiting for other software managers to finish... ",
        "    sleep 10",
        "done",
        "if test -b /dev/nvme0n1; then debconf-set-selections <<< 'grub-pc grub-pc/install_devices multiselect /dev/nvme0n1'; fi",
        "debconf-set-selections <<< 'libc6 libraries/restart-without-asking boolean true'",
        "apt-get update -yq",
        "apt-get upgrade -yq",
        "apt-get dist-upgrade -yq",
        "apt-get install -y bash git vim openssh-server curl sudo lsb-release locales",
        "locale-gen en_US.UTF-8",
        "update-locale LANG=en_US.UTF-8",
        "apt-get update -yq"
      ],
      "environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell-local",
      "script": "os-images/AWS/files/prep-linux.sh",
      "environment_vars": [
        "SALT_PR={{ user `salt_pr` }}",
        "DISTRO_SLUG={{ user `distro_slug` }}",
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}"
      ]
    },
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "# Install Pyenv Dependencies",
        "apt-get install -y --no-install-recommends {{ user `salt_provision_pyenv_deps` }}",
        "# Install PyEnv",
        "curl https://pyenv.run | bash"
      ],
      "environment_vars": [
        "LANG=en_US.UTF-8",
        "DEBIAN_FRONTEND=noninteractive"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell",
      "script": "os-images/files/install-salt.sh",
      "environment_vars": [
        "LANG=en_US.UTF-8",
        "SALT_VERSION={{ user `salt_provision_version` }}",
        "SALT_PY_VERSION={{ user `salt_provision_python_version` }}"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "# Un-Install Pyenv Dependencies",
        "apt-get purge -y {{ user `salt_provision_pyenv_deps` }}",
        "apt-get autoremove --purge -y"
      ],
      "environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "file",
      "generated": true,
      "source": ".tmp/{{ user `distro_slug` }}",
      "destination": "{{ user `salt_provision_root_dir` }}/",
      "direction": "upload"
    },
    {
      "type": "shell",
      "script": "os-images/files/provision-system.sh",
      "environment_vars": [
        "LANG=en_US.UTF-8",
        "SALT_PY_VERSION={{ user `salt_provision_python_version` }}",
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}",
        "SALT_STATE={{ user `state_name` }}"
      ],
      "pause_after": "5s",
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "rm -rf /var/lib/apt/lists/* && apt-get clean"
      ],
      "environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell",
      "script": "os-images/files/cleanup-salt.sh",
      "environment_vars": [
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}"
      ],
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    },
    {
      "type": "shell",
      "script": "os-images/AWS/files/cleanup-linux.sh",
      "execute_command": "sudo -E -H bash -c '{{ .Vars }} {{ .Path }}'"
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true,
      "custom_data": {
        "ami_name": "{{ user `ami_name_prefix` }}/{{ user `build_type` }}/{{ user `ami_name_suffix` }}"
      }
    }
  ]
}
