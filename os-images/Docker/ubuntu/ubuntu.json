{
  "_comment": "Build with `packer build ubuntu.json`",
  "builders": [
    {
      "type": "docker",
      "image": "{{ user `docker_image` }}",
      "pull": true,
      "commit": true,
      "changes": [
        "Entrypoint [\"/bin/sh\", \"-c\"]",
        "CMD [\"/bin/bash\"]",
        "LABEL Name=\"{{ user `build_type` | upper }} // {{ user `os_name` }} {{ user `os_version` }}\"",
        "LABEL OS-Name={{ user `os_name` }}",
        "LABEL OS-Version={{ user `os_version` }}",
        "LABEL BuildDate={{ isotime }}",
        "LABEL BuildType={{ user `build_type` | upper }}",
        "LABEL CreatedBy=packer",
        "LABEL Owner=SRE",
        "LABEL Description=\"{{ user `build_type` | upper }} Image of {{ user `os_name` }} {{ user `os_version` }}\"",
        "ENV LC_ALL en_GB.UTF-8"
      ],
      "message": "{{ user `build_type` | upper }} Image of {{ user `os_name` }} {{ user `os_version` }} on {{ isotime }}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "echo -n ''|tee /etc/apt/apt.conf.d/20auto-upgrades",
        "sleep 5",
        "while fuser /var/lib/dpkg/lock >/dev/null 2>&1 ; do",
        "    echo Waiting for other software managers to finish... ",
        "    sleep 1",
        "done",
        "apt-get update -yq",
        "if test -b /dev/nvme0n1; then debconf-set-selections <<< 'grub-pc grub-pc/install_devices multiselect /dev/nvme0n1'; fi",
        "debconf-set-selections <<< 'libc6 libraries/restart-without-asking boolean true'",
        "apt-get upgrade -yq",
        "apt-get dist-upgrade -yq",
        "apt-get install -y bash git vim openssh-server curl sudo lsb-release locales",
        "locale-gen en_US.UTF-8",
        "update-locale LANG=en_US.UTF-8"
      ],
      "environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ]
    },
    {
      "type": "shell-local",
      "script": "os-images/Docker/files/prep-linux.sh",
      "environment_vars": [
        "SALT_PR={{ user `salt_pr` }}",
        "DISTRO_SLUG={{ user `distro_slug` }}",
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}"
      ]
    },
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "# Install Pyenv Dependencies",
        "apt-get install -y --no-install-recommends {{ user `salt_provision_pyenv_deps` }}",
        "# Install PyEnv",
        "curl https://pyenv.run | bash"
      ],
      "environment_vars": [
        "LANG=en_US.UTF-8",
        "DEBIAN_FRONTEND=noninteractive"
      ]
    },
    {
      "type": "shell",
      "script": "os-images/files/install-salt.sh",
      "environment_vars": [
        "LANG=en_US.UTF-8",
        "SALT_VERSION={{ user `salt_provision_version` }}",
        "SALT_PY_VERSION={{ user `salt_provision_python_version` }}"
      ]
    },
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "# Un-Install Pyenv Dependencies",
        "apt-get purge -y {{ user `salt_provision_pyenv_deps` }}",
        "apt-get autoremove --purge -y"
      ],
      "environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ]
    },
    {
      "type": "file",
      "generated": true,
      "source": ".tmp/{{ user `distro_slug` }}",
      "destination": "{{ user `salt_provision_root_dir` }}/",
      "direction": "upload"
    },
    {
      "type": "shell",
      "script": "os-images/files/provision-system.sh",
      "environment_vars": [
        "LANG=en_US.UTF-8",
        "SALT_PY_VERSION={{ user `salt_provision_python_version` }}",
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}",
        "SALT_STATE={{ user `state_name` }}"
      ],
      "pause_after": "5s"
    },
    {
      "type": "shell",
      "inline_shebang": "/bin/bash -ex",
      "inline": [
        "rm -rf /var/lib/apt/lists/* && apt-get clean"
      ],
      "environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ]
    },
    {
      "type": "shell",
      "script": "os-images/files/cleanup-salt.sh",
      "environment_vars": [
        "SALT_VERSION={{ user `salt_provision_version` }}",
        "SALT_ROOT_DIR={{ user `salt_provision_root_dir` }}"
      ]
    },
    {
      "type": "shell",
      "script": "os-images/Docker/files/cleanup-linux.sh"
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true,
      "custom_data": {
        "container_name": "{{ user `docker_repository` }}/{{ user `build_type` | lower }}-{{ user `os_name` | lower }}-{{ user `os_version` }}"
      }
    },
    [
      {
        "type": "docker-tag",
        "repository": "{{ user `docker_repository` }}/{{ user `build_type` | lower }}-{{ user `os_name` | lower }}-{{ user `os_version` }}",
        "tag": "latest"
      },
      "docker-push"
    ]
  ]
}
